{"version":3,"sources":["components/Section/Section.module.css","components/Feedback/feedback.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Feedback/feedback.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","style","Feedback","options","onLeaveFeedback","buttons","map","option","type","value","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","ratingColor","list","color","defaultProps","App","state","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,gC,+LCebC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,oBAAIC,UAAWC,IAAMH,MAArB,SAA6BA,IAC5BC,M,gBCgBQG,EApBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OACE,oBAAIJ,UAAWC,IAAMI,QAArB,SACGF,EAAQG,KAAI,SAACC,GACZ,OACE,6BACE,wBAAQC,KAAK,SAASC,MAAOF,EAAQG,QAASN,EAA9C,SACGG,KAFIA,S,iCCEJI,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,oBAAIZ,UAAWC,IAAMW,QAArB,SAA+BA,KCAlCC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAcD,GAAsB,GAAK,QAAU,MACzD,OACE,mCACGD,EAAQ,EACP,qBAAIjB,UAAWC,IAAMmB,KAArB,UACE,wCAAWN,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qBAAIhB,MAAO,CAAEoB,MAAOF,GAApB,gCACsBD,EADtB,UAKF,cAAC,EAAD,CAAcN,QAAQ,yBAM9BC,EAAWS,aAAe,CACxBR,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAUPL,QCaAU,E,4MA9CbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,gBAAkB,SAACqB,GACjB,IAAMhB,EAAQgB,EAAMC,OAAOjB,MAC3B,EAAKkB,UAAS,SAACC,GAAD,sBACXnB,EAAQmB,EAAUnB,GAAS,O,EAIhCoB,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjBV,KADiB,EACXC,QADW,EACFC,K,EAGzBc,gCAAkC,WAAO,IAC/BhB,EAAS,EAAKU,MAAdV,KACR,OAAOiB,SAAUjB,EAAO,EAAKe,qBAAwB,M,4CAGvD,WAAU,IAAD,EACwBG,KAAKR,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB4B,KAAK5B,oBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACE,cAAC,EAAD,CACEgB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,KAAKH,qBACZX,mBAAoBc,KAAKF,6C,GAvCnBG,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57c6d2c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3YCbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"feedback_buttons__1l9Gw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3t5B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1QtO_\"};","import PropTypes from \"prop-types\";\r\nimport style from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h1 className={style.title}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./feedback.module.css\";\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={style.buttons}>\r\n      {options.map((option) => {\r\n        return (\r\n          <li key={option}>\r\n            <button type=\"button\" value={option} onClick={onLeaveFeedback}>\r\n              {option}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\nexport default Feedback;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2 className={style.message}>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./Statistics.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const ratingColor = positivePercentage >= 50 ? \"green\" : \"red\";\r\n  return (\r\n    <>\r\n      {total > 0 ? (\r\n        <ul className={style.list}>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li style={{ color: ratingColor }}>\r\n            Positive feedback: {positivePercentage}%\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\"></Notification>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/Feedback/feedback\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (event) => {\n    const value = event.target.value;\n    this.setState((prevState) => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return parseInt((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}